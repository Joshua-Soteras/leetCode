class Solution:
    def isValid(self, s: str) -> bool:
        
        #set that contains the opening parentheses 
        opening = {'(' , '{' , '['}
        ending = {')' , '}' , ']'}

        #Dictionary of Paratheses
        pairs = {')':'(' , '}':'{' , ']':'['}

        stack = []
        for characer in s: 

            #If nothing is within the stack means that the string begins with an closing bracket
            # Return false because valid parentheses cannot begin with a closing bracket
            if (not stack) and (character in pairs):
                return False 
            
            #If the character is an closing parentheses then pop off stack to the stack 
            elif character in pairs and :
