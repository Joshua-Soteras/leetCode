class Solution:
    def dailyTemperatures(self, temperatures: List[int]) -> List[int]:

        #Have to iterate through whole temperatures
        
        #Stack to hold the lowest temps that haven't found a warmer day
        #This will hold the index (not the values themselves)
        stack = deque()

        #list replication (or sometimes sequence multiplication) 
        #Store the days for each corressponding day 
        #Days go by index within temperatures list
        answers = [0] * 4

        for index in range(len(temperatures)): 
            
            #If the stack is empty, we push the current day 
            if not stack:
                stack.append(index)
            #If not, compare the top of stack with current day (index)
            #If the  current temp is higher we will calculate the days waited for warmer 
            elif temperatures[stack[-1]] < temperatures[index]
                
                #Calculated the days waited by getting the difference
                daysWaited = index - stack[-1]

                #Store in corresponding day within answer list
                answer[stack[-1]] = daysWaited 

            #or the top number is less than the current temp
            if (not deque) or stack[-1] <= 
        
